// Mocks generated by Mockito 5.4.6 from annotations
// in tappay_custom_sdk/test/tappay_sdk_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tappay_custom_sdk/direct_pay.dart' as _i2;
import 'package:tappay_custom_sdk/payment_info.dart' as _i3;
import 'package:tappay_custom_sdk/tappay_config.dart' as _i6;
import 'package:tappay_custom_sdk/tappay_sdk.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDirectPay_0 extends _i1.SmartFake implements _i2.DirectPay {
  _FakeDirectPay_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaymentResult_1 extends _i1.SmartFake implements _i3.PaymentResult {
  _FakePaymentResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TapPaySDK].
///
/// See the documentation for Mockito's code generation for more information.
class MockTapPaySDK extends _i1.Mock implements _i4.TapPaySDK {
  MockTapPaySDK() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DirectPay get directPay => (super.noSuchMethod(
        Invocation.getter(#directPay),
        returnValue: _FakeDirectPay_0(
          this,
          Invocation.getter(#directPay),
        ),
      ) as _i2.DirectPay);

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  set directPay(_i2.DirectPay? _directPay) => super.noSuchMethod(
        Invocation.setter(
          #directPay,
          _directPay,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> initialize(_i6.TapPayConfig? config) => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [config],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [DirectPay].
///
/// See the documentation for Mockito's code generation for more information.
class MockDirectPay extends _i1.Mock implements _i2.DirectPay {
  MockDirectPay() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.PaymentResult> pay(_i3.PaymentInfo? paymentInfo) =>
      (super.noSuchMethod(
        Invocation.method(
          #pay,
          [paymentInfo],
        ),
        returnValue: _i5.Future<_i3.PaymentResult>.value(_FakePaymentResult_1(
          this,
          Invocation.method(
            #pay,
            [paymentInfo],
          ),
        )),
      ) as _i5.Future<_i3.PaymentResult>);

  @override
  _i5.Future<bool> isCardValid({
    required String? cardNumber,
    required String? expiryMonth,
    required String? expiryYear,
    required String? securityCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #isCardValid,
          [],
          {
            #cardNumber: cardNumber,
            #expiryMonth: expiryMonth,
            #expiryYear: expiryYear,
            #securityCode: securityCode,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
